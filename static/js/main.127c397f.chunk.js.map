{"version":3,"sources":["views/HomePage.js","components/GUI.js","algorithm/kirkpatrick.js","views/DemoPage.js","theme/theme.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","Box","sx","backgroundColor","width","height","display","justifyContent","alignItems","textAlign","Typography","variant","color","Button","href","mt","GUI","props","useState","open","setOpen","List","component","dense","minWidth","maxWidth","bgcolor","ListItemButton","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","Divider","mb","ml","mr","flexDirection","pb","justifyItems","TextField","size","type","value","n","onChange","e","target","setNum","align","Radio","checked","setType","pl","hideTextfield","setOutsideColor","outsideColor","setInsideColor","insideColor","setGenerate","polygon","pts","leftmost","Pt","Number","POSITIVE_INFINITY","rightmost","NEGATIVE_INFINITY","i","length","x","upper","lower","isInUpper","p","slope","y","b","push","sortX","sort","a","sorted_upper","sorted_lower","concat","reverse","Group","fromPtArray","triangulate","vertices","THREE","convert","triangulateShape","triangles","c","triangulateHole","hole","holes","h","index","kirkpatrick","outer_triangle","independent_set","adjacency","includes","array","add","computeAdjacencyGraph","keys","Object","k","s","split","j","f","parseFloat","convertToPoint","neighbors","independent","findIndependentSet","clone","filter","item","new_triangles","new_triangles_hole","all_triangles","insert","computeKirkpatrick","triangles_hole","levels","points","new_all_triangles","prev","dag","old_tri","new_tri","same","found","new_a","old_triangles","filtered_new_triangles","filtered_old_triangles","computeDag","DemoPage","triangle","triangleHole","setPts","outerTriangle","setOuterTriangle","createColor","slide","setSlide","pointTriangle","setPointTriangle","generate","pointer","useRef","info","position","style","onStart","space","num_points","x_size","y_size","new_pts","Math","floor","random","onAnimate","form","time","big_triangles","fill","parseInt","css","polygons","bindMouse","bindTouch","play","point","current","point_triangle","queue","pop","Polygon","hasIntersectPoint","findLocation","theme","createTheme","palette","mode","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.127c397f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Typography, Button } from \"@mui/material\";\n\nexport default function HomePage() {\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"background.default\",\n        width: \"100vw\",\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Box sx={{ textAlign: \"center\" }}>\n        <Typography variant=\"h2\" sx={{ color: \"white\" }}>\n          Kirkpatrick's Algorithm\n        </Typography>\n        <Button variant=\"contained\" href=\"#/demo\" sx={{ mt: 10 }}>\n          Demo\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Collapse,\n  Divider,\n  List,\n  ListItemText,\n  ListItemButton,\n  Radio,\n  TextField,\n} from \"@mui/material\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport { ColorPicker } from \"material-ui-color\";\n\nexport default function GUI(props) {\n  const [open, setOpen] = useState(true);\n\n  return (\n    <Box>\n      <List\n        component=\"nav\"\n        dense={true}\n        sx={{\n          width: \"100%\",\n          minWidth: 200,\n          maxWidth: 200,\n          bgcolor: \"background.paper\",\n        }}\n      >\n        <ListItemButton\n          onClick={() => {\n            setOpen(!open);\n          }}\n        >\n          <ListItemText primary=\"GUI\" sx={{ color: \"white\" }} />\n          {open ? (\n            <ExpandLess sx={{ color: \"white\" }} />\n          ) : (\n            <ExpandMore sx={{ color: \"white\" }} />\n          )}\n        </ListItemButton>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding dense={true}>\n            <Divider sx={{ mb: 1 }} />\n            <Box sx={{ ml: 2, mr: 2, mb: 1 }}>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  pb: 1,\n                  alignItems: \"center\",\n                  justifyItems: \"center\",\n                }}\n              >\n                <ListItemText primary=\"N\" sx={{ color: \"white\" }} />\n                <TextField\n                  size=\"small\"\n                  type=\"number\"\n                  value={props.n}\n                  onChange={(e) => {\n                    if (e.target.value >= 3) {\n                      props.setNum(e.target.value);\n                    } else {\n                      props.setNum(3);\n                    }\n                  }}\n                  sx={{ width: \"50%\", align: \"right\" }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyItems: \"center\",\n                }}\n              >\n                <ListItemText primary=\"Animate\" sx={{ color: \"white\" }} />\n                <Radio\n                  checked={props.type === \"animate\"}\n                  onClick={() => {\n                    if (props.type === \"animate\") {\n                      props.setType(\"\");\n                    } else {\n                      props.setType(\"animate\");\n                    }\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyItems: \"center\",\n                }}\n              >\n                <ListItemText primary=\"Find Point\" sx={{ color: \"white\" }} />\n                <Radio\n                  checked={props.type === \"find\"}\n                  onClick={() => {\n                    if (props.type === \"find\") {\n                      props.setType(\"\");\n                    } else {\n                      props.setType(\"find\");\n                    }\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyItems: \"center\",\n                }}\n              >\n                <ListItemText primary=\"Color\" sx={{ color: \"white\" }} />\n              </Box>\n              <Box sx={{ pl: 2 }}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyItems: \"center\",\n                  }}\n                >\n                  <ListItemText\n                    primary=\"Outside\"\n                    sx={{ color: \"white\", mr: 7 }}\n                  />\n                  <ColorPicker\n                    hideTextfield\n                    onChange={(color) => {\n                      props.setOutsideColor(color);\n                    }}\n                    value={props.outsideColor}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyItems: \"center\",\n                  }}\n                >\n                  <ListItemText\n                    primary=\"Inside\"\n                    sx={{ color: \"white\", mr: 7 }}\n                  />\n                  <ColorPicker\n                    hideTextfield\n                    onChange={(color) => {\n                      props.setInsideColor(color);\n                    }}\n                    value={props.insideColor}\n                  />\n                </Box>\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyItems: \"center\",\n                  justifyContent: \"center\",\n                  mt: 2,\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  onClick={() => {\n                    props.setGenerate(true);\n                  }}\n                >\n                  Generate\n                </Button>\n              </Box>\n            </Box>\n          </List>\n        </Collapse>\n      </List>\n    </Box>\n  );\n}\n","import { Pt, Group, Polygon } from \"pts\";\nimport * as THREE from \"three\";\n\nfunction polygon(pts) {\n  let polygon = [];\n  let leftmost = new Pt(Number.POSITIVE_INFINITY, 0);\n  let rightmost = new Pt(Number.NEGATIVE_INFINITY, 0);\n\n  for (let i = 0; i < pts.length; i++) {\n    if (leftmost.x > pts[i].x) {\n      leftmost = pts[i];\n    }\n    if (rightmost.x < pts[i].x) {\n      rightmost = pts[i];\n    }\n  }\n\n  let upper = [];\n  let lower = [];\n\n  let isInUpper = (p) => {\n    let slope = (rightmost.y - leftmost.y) / (rightmost.x - leftmost.x);\n    let b = leftmost.y - slope * leftmost.x;\n    return slope * p.x + b > p.y;\n  };\n\n  for (let i = 0; i < pts.length; i++) {\n    if (isInUpper(pts[i])) {\n      upper.push(pts[i]);\n    } else {\n      lower.push(pts[i]);\n    }\n  }\n\n  let sortX = (pts) => {\n    return pts.sort((a, b) => a.x - b.x);\n  };\n\n  let sorted_upper = sortX(upper);\n  let sorted_lower = sortX(lower);\n\n  polygon = sorted_upper.concat(sorted_lower.reverse());\n  return Group.fromPtArray(polygon);\n}\n\nfunction triangulate(pts) {\n  let convert = (pts) => {\n    let vertices = [];\n\n    for (let i = 0; i < pts.length; i++) {\n      vertices.push(new THREE.Vector2(pts[i].x, pts[i].y));\n    }\n    return vertices;\n  };\n\n  let vertices = convert(pts);\n\n  let triangulate = THREE.ShapeUtils.triangulateShape(vertices, []);\n\n  let triangles = [];\n  for (let i = 0; i < triangulate.length; i++) {\n    let a = new Pt(\n      vertices[triangulate[i][0]].x,\n      vertices[triangulate[i][0]].y\n    );\n    let b = new Pt(\n      vertices[triangulate[i][1]].x,\n      vertices[triangulate[i][1]].y\n    );\n    let c = new Pt(\n      vertices[triangulate[i][2]].x,\n      vertices[triangulate[i][2]].y\n    );\n    triangles.push(new Group(a, b, c));\n  }\n  return Group.fromPtArray(triangles);\n}\n\nfunction triangulateHole(pts, hole) {\n  let convert = (pts) => {\n    let vertices = [];\n\n    for (let i = 0; i < pts.length; i++) {\n      vertices.push(new THREE.Vector2(pts[i].x, pts[i].y));\n    }\n    return vertices;\n  };\n  let vertices = convert(pts);\n\n  let holes = [];\n  let h = [];\n  for (let i = 0; i < hole.length; i++) {\n    h.push(new THREE.Vector2(hole[i].x, hole[i].y));\n  }\n  holes.push(h);\n\n  let triangulate = THREE.ShapeUtils.triangulateShape(vertices, holes);\n\n  let triangles = [];\n  for (let i = 0; i < triangulate.length; i++) {\n    let convert = (index, vertices, holes) => {\n      if (index >= vertices.length) {\n        return new Pt(\n          holes[index - vertices.length].x,\n          holes[index - vertices.length].y\n        );\n      } else {\n        return new Pt(vertices[index].x, vertices[index].y);\n      }\n    };\n    let a = convert(triangulate[i][0], vertices, holes[0]);\n    let b = convert(triangulate[i][1], vertices, holes[0]);\n    let c = convert(triangulate[i][2], vertices, holes[0]);\n    triangles.push(new Group(a, b, c));\n  }\n  return Group.fromPtArray(triangles);\n}\n\nfunction computeAdjacencyGraph(triangles) {\n  let adjacency = {};\n\n  for (let i = 0; i < triangles.length; i++) {\n    let a = triangles[i][0];\n    let b = triangles[i][1];\n    let c = triangles[i][2];\n\n    let includes = (p, array) => {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].x === p.x && array[i].y === p.y) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    let add = (a, b) => {\n      if (!adjacency[a]) {\n        adjacency[a] = [];\n      }\n      if (!adjacency[b]) {\n        adjacency[b] = [];\n      }\n      if (!includes(b, adjacency[a])) {\n        adjacency[a].push(b);\n      }\n\n      if (!includes(a, adjacency[b])) {\n        adjacency[b].push(a);\n      }\n    };\n\n    add(a, b);\n    add(a, c);\n    add(b, c);\n  }\n\n  return adjacency;\n}\n\nfunction findIndependentSet(pts, triangles, outer_triangle) {\n  if (pts.length === 2) {\n    return Group.fromPtArray([pts[0]]);\n  }\n\n  let independent_set = [];\n  let adjacency = computeAdjacencyGraph(triangles);\n\n  let keys = Object.keys(adjacency);\n  for (let i = 0; i < keys.length; i++) {\n    let convertToPoint = (p) => {\n      let s = p.split(\",\");\n      let n = [];\n      for (let j = 0; j < s.length; j++) {\n        n = n.concat(s[j].split(\"(\"));\n      }\n\n      let f = [];\n      for (let j = 0; j < n.length; j++) {\n        f = f.concat(n[j].split(\")\"));\n      }\n      return new Pt(parseFloat(f[1]), parseFloat(f[2]));\n    };\n\n    let includes = (p, array) => {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].x === p.x && array[i].y === p.y) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    // convert string to point\n    let k = convertToPoint(keys[i]);\n\n    // if it is not part of the big triangle\n    if (!includes(k, outer_triangle)) {\n      // if its adjacent list has no point in independent set\n      let neighbors = adjacency[keys[i]];\n      let independent = true;\n      for (let j = 0; j < neighbors.length; j++) {\n        if (includes(neighbors[j], independent_set)) {\n          independent = false;\n        }\n      }\n\n      if (independent) {\n        independent_set.push(k);\n      }\n    }\n  }\n\n  return Group.fromPtArray(independent_set);\n}\n\nfunction kirkpatrick(pts, triangles, outer_triangle) {\n  // find independent set\n  let independent_set = findIndependentSet(\n    pts.clone(),\n    triangles.clone(),\n    outer_triangle.clone()\n  );\n\n  // remove points from list\n  let equal = (a, b) => {\n    return a.x === b.x && a.y === b.y;\n  };\n\n  for (let i = 0; i < independent_set.length; i++) {\n    pts = pts.filter((item) => {\n      return !equal(item, independent_set[i]);\n    });\n  }\n\n  // re-triangulate\n  pts = polygon(pts);\n  let new_triangles = triangulate(pts.clone());\n  let new_triangles_hole = triangulateHole(outer_triangle.clone(), pts.clone());\n  let all_triangles = new_triangles.clone().insert(new_triangles_hole.clone());\n\n  return [pts, new_triangles, new_triangles_hole, all_triangles];\n}\n\nfunction computeDag(levels) {\n  let dag = {};\n  let same = (a, b) => {\n    for (let i = 0; i < a.length; i++) {\n      let found = false;\n      for (let j = 0; j < b.length; j++) {\n        if (a[i].x === b[j].x && a[i].y === b[j].y) {\n          found = true;\n        }\n      }\n      if (!found) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  let intersect = (old_tri, new_tri) => {\n    return !same(old_tri, new_tri);\n  };\n\n  let filter = (a, b) => {\n    let new_a = [];\n    for (let i = 0; i < a.length; i++) {\n      let s = false;\n      for (let j = 0; j < b.length; j++) {\n        if (same(a[i], b[j])) {\n          s = true;\n        }\n      }\n      if (!s) {\n        new_a.push(a[i]);\n      }\n    }\n\n    return new_a;\n  };\n\n  for (let i = 0; i < levels.length; i++) {\n    if (i + 1 < levels.length) {\n      let new_triangles = levels[i + 1][3];\n      let old_triangles = levels[i][3];\n\n      // filter out same triangles\n      let filtered_new_triangles = filter(new_triangles, old_triangles);\n      let filtered_old_triangles = filter(old_triangles, new_triangles);\n\n      // for each new triangle\n      for (let j = 0; j < filtered_new_triangles.length; j++) {\n        // find old triangles that intersect it\n        for (let k = 0; k < filtered_old_triangles.length; k++) {\n          if (intersect(filtered_old_triangles[k], filtered_new_triangles[j])) {\n            if (!dag[filtered_new_triangles[j]]) {\n              dag[filtered_new_triangles[j]] = [];\n            }\n            dag[filtered_new_triangles[j]].push(filtered_old_triangles[k]);\n          }\n        }\n      }\n    }\n  }\n  return dag;\n}\n\nexport function findLocation(point, dag, outer_triangle) {\n  let queue = [];\n  queue.push(dag[outer_triangle]);\n\n  while (queue.length > 0) {\n    let triangles = queue.pop(0);\n    // list of triangles\n    for (let i = 0; i < triangles.length; i++) {\n      if (Polygon.hasIntersectPoint(triangles[i], point)) {\n        if (!dag[triangles[i]]) {\n          return triangles[i];\n        } else {\n          queue.push(dag[triangles[i]]);\n        }\n      }\n    }\n  }\n\n  return new Group();\n}\n\nexport function computeKirkpatrick(pts, outer_triangle) {\n  pts = polygon(pts);\n\n  // triangulate polygon\n  let triangles = triangulate(pts.clone());\n\n  // triangulate hole\n  let triangles_hole = triangulateHole(outer_triangle.clone(), pts.clone());\n\n  // compute kirkpatrick's algorithm\n  let all_triangles = triangles.clone().insert(triangles_hole.clone());\n  let levels = [];\n\n  levels.push([pts, triangles, triangles_hole, all_triangles]);\n\n  let [points, new_triangles, new_triangles_hole, new_all_triangles] =\n    kirkpatrick(pts.clone(), all_triangles.clone(), outer_triangle.clone());\n\n  levels.push([points, new_triangles, new_triangles_hole, new_all_triangles]);\n\n  let prev = points.length;\n  while (points.length !== 1 || prev !== points.length) {\n    [points, new_triangles, new_triangles_hole, new_all_triangles] =\n      kirkpatrick(\n        points.clone(),\n        new_all_triangles.clone(),\n        outer_triangle.clone()\n      );\n    prev = points.length;\n\n    levels.push([points, new_triangles, new_triangles_hole, new_all_triangles]);\n  }\n\n  let dag = computeDag(levels);\n  dag[outer_triangle] = new_all_triangles;\n\n  return [triangles, triangles_hole, levels, dag];\n}\n","import React, { useState, useRef } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Pt, Group } from \"pts\";\nimport { QuickStartCanvas } from \"react-pts-canvas\";\nimport GUI from \"../components/GUI\";\nimport { computeKirkpatrick, findLocation } from \"../algorithm/kirkpatrick\";\nimport { createColor } from \"material-ui-color\";\n\nexport default function DemoPage() {\n  const [pts, setPts] = useState(new Group());\n  const [outerTriangle, setOuterTriangle] = useState(new Group());\n  const [n, setNum] = useState(10);\n  const [outsideColor, setOutsideColor] = useState(createColor(\"#FFA908\"));\n  const [insideColor, setInsideColor] = useState(createColor(\"#72B4F6\"));\n  const [slide, setSlide] = useState(0);\n  const [pointTriangle, setPointTriangle] = useState(new Group());\n  const [generate, setGenerate] = useState(false);\n  const [type, setType] = useState(\"\");\n  const pointer = useRef(new Pt());\n\n  let triangle;\n  let triangleHole;\n  let levels = [];\n  let dag = {};\n\n  if (pts.length > 0) {\n    let info = computeKirkpatrick(pts, outerTriangle);\n    triangle = info[0];\n    triangleHole = info[1];\n    levels = [];\n    levels.push(...info[2]);\n    dag = info[3];\n  }\n\n  return (\n    <Box sx={{ height: \"100vh\" }}>\n      <Box sx={{ position: \"absolute\" }}>\n        <GUI\n          n={n}\n          setNum={setNum}\n          outsideColor={outsideColor}\n          setOutsideColor={setOutsideColor}\n          insideColor={insideColor}\n          setInsideColor={setInsideColor}\n          generate={generate}\n          setGenerate={setGenerate}\n          type={type}\n          setType={setType}\n        />\n      </Box>\n      <QuickStartCanvas\n        style={{ height: \"100%\" }}\n        onStart={(space) => {\n          let num_points = n;\n          let x_size = space.size.x * 0.3;\n          let y_size = space.size.y * 0.3;\n          let new_pts = [];\n          for (let i = 0; i < num_points; i++) {\n            new_pts.push(\n              new Pt(\n                space.size.x * 0.35 + Math.floor(x_size * Math.random()),\n                space.size.y * 0.5 + Math.floor(y_size * Math.random())\n              )\n            );\n          }\n\n          setPts(Group.fromPtArray(new_pts));\n\n          setOuterTriangle(\n            new Group(\n              new Pt(space.size.x * 0.5, space.size.y * 0.01),\n              new Pt(space.size.x * 0.01, space.size.y * 0.95),\n              new Pt(space.size.x * 0.99, space.size.y * 0.95)\n            )\n          );\n        }}\n        onAnimate={(space, form, time) => {\n          // draw large triangle\n          let big_triangles = new Group(\n            new Pt(space.size.x * 0.5, space.size.y * 0.01),\n            new Pt(space.size.x * 0.01, space.size.y * 0.95),\n            new Pt(space.size.x * 0.99, space.size.y * 0.95)\n          );\n          form.fill(\"#9ab\").polygon(big_triangles);\n\n          // n changes\n          if (parseInt(n) !== parseInt(pts.length) || generate) {\n            setGenerate(false);\n            let num_points = n;\n            let x_size = space.size.x * 0.3;\n            let y_size = space.size.y * 0.3;\n            let new_pts = [];\n            for (let i = 0; i < num_points; i++) {\n              new_pts.push(\n                new Pt(\n                  space.size.x * 0.35 + Math.floor(x_size * Math.random()),\n                  space.size.y * 0.45 + Math.floor(y_size * Math.random())\n                )\n              );\n            }\n\n            setPts(Group.fromPtArray(new_pts));\n\n            setOuterTriangle(\n              new Group(\n                new Pt(space.size.x * 0.5, space.size.y * 0.01),\n                new Pt(space.size.x * 0.01, space.size.y * 0.95),\n                new Pt(space.size.x * 0.99, space.size.y * 0.95)\n              )\n            );\n\n            if (pts.length > 0) {\n              let info = computeKirkpatrick(pts, outerTriangle);\n              triangle = info[0];\n              triangleHole = info[1];\n\n              levels = [];\n              levels.push(...info[2]);\n\n              dag = info[3];\n            }\n          }\n\n          // animate\n          if (type === \"animate\") {\n            if (slide !== parseInt((time / 1000) % levels.length)) {\n              setSlide((slide + 1) % levels.length);\n            }\n\n            // animate levels\n            form\n              .fill(insideColor.css.backgroundColor)\n              .polygons(levels[slide][1]);\n            // draw triangulation with hole\n            form\n              .fill(outsideColor.css.backgroundColor)\n              .polygons(levels[slide][2]);\n            // draw points\n            form.fill(\"#fff\").points(levels[slide][0], 5, \"circle\");\n          } else {\n            setSlide(0);\n            form.fill(insideColor.css.backgroundColor).polygons(triangle);\n            form.fill(outsideColor.css.backgroundColor).polygons(triangleHole);\n            form.fill(\"#fff\").points(pts, 5, \"circle\");\n          }\n\n          // find point\n          if (type === \"find\") {\n            space.bindMouse().bindTouch().play();\n            form.fill(\"#455\").point(space.pointer, 5);\n\n            if (\n              pointer.current.x !== space.pointer.x &&\n              pointer.current.y !== space.pointer.y\n            ) {\n              pointer.current = space.pointer;\n              let point_triangle = findLocation(\n                pointer.current,\n                dag,\n                outerTriangle,\n                levels.length\n              );\n              setPointTriangle(point_triangle);\n            }\n\n            form.fill(\"672\").polygon(pointTriangle);\n          }\n        }}\n      />\n    </Box>\n  );\n}\n","import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport default theme;\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"@mui/system\";\nimport HomePage from \"./views/HomePage\";\nimport DemoPage from \"./views/DemoPage\";\nimport theme from \"./theme/theme\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/demo\" component={DemoPage} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}